# Shared config among shells (loaded after other config but before local config at the end)
# Tips
#   - For tools not installed by package manager, we should test if its
#     installation directory exists instead of if its executable exists,
#     e.g. see tmuxifier part

# Load secrets
if [[ -f ~/.shell/secrets ]]; then
    source ~/.shell/secrets
fi

if command_exists nvim; then
    export EDITOR=nvim
elif command_exists vim; then
    export EDITOR=vim
else
    export EDITOR=vi
fi

# Add local bin dir to path
export PATH=$PATH:$HOME/.local/bin

# ssh-agent
# Run `ssh-add` manually to add private keys
if command_exists ssh-agent; then
    eval `ssh-agent`
fi

# WSL
if [[ $platform = "wsl" ]]; then
    # C:\Users\xxx
    win_userprofile=$(powershell.exe -c 'Get-Item -Path Env:\USERPROFILE | select -ExpandProperty Value -first 1' | tr -d '\r')
    # /mnt/c/Users/xxx
    win_home=$(wslpath "$win_userprofile")

    # Removes pyenv-win paths
    PATH=$(echo "$PATH" | sed -e "s|:$win_home/.pyenv/pyenv-win/bin||")
    export PATH=$(echo "$PATH" | sed -e "s|:$win_home/.pyenv/pyenv-win/shims||")
fi

# Enable color support of ls and also add handy aliases
if [[ $platform = "linux" ]]; then
    if [ -x /usr/bin/dircolors ]; then
        test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
        alias ls='ls --color=auto'
        alias dir='dir --color=auto'
        alias vdir='vdir --color=auto'

        alias grep='grep --color=auto'
        alias fgrep='fgrep --color=auto'
        alias egrep='egrep --color=auto'
    fi
elif [[ $platform = "macos" ]]; then
    export CLICOLOR=1
    # hard-coded, search for LSCOLORS online for more
    export LSCOLORS="Gxfxcxdxbxegedabagacad"
fi

# tmuxifier
if [[ -d "$HOME/.tmux/tmuxifier" ]]; then
    export TMUXIFIER="$HOME/.tmux/tmuxifier"
    export PATH="$HOME/.tmux/tmuxifier/bin:$PATH"
    export TMUXIFIER_LAYOUT_PATH="$HOME/.tmux/tmuxifier_layouts"
    eval "$(tmuxifier init -)"
fi

# pyenv
if [[ -d "$HOME/.pyenv" ]]; then
    if [[ -z "$PYENV_ROOT" ]]; then
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
    fi
    eval "$(pyenv init --path)"
    eval "$(pyenv init -)"
    if [[ -d $(pyenv root)/plugins/pyenv-virtualenv ]]; then
        eval "$(pyenv virtualenv-init -)"
        alias workon='pyenv activate'
        alias mkvirtualenv='pyenv virtualenv'
        alias lsvirtualenv='pyenv virtualenvs'
        alias rmvirtualenv='pyenv uninstall'
    fi
fi

# bd. See https://github.com/vigneshwaranr/bd
# Quickly go back to a parent directory in linux instead of typing "cd ../../.." repeatedly
if command_exists bd; then
    alias bd=". bd -si"
fi

# thefuck
if command_exists thefuck; then
    eval "$(thefuck --alias)"
fi

# autojump
if [[ $platform = "linux" ]]; then
    [[ -f /usr/share/autojump/autojump.sh ]] && source /usr/share/autojump/autojump.sh
elif [[ $platform = "macos" ]]; then
    [[ -f /usr/local/etc/profile.d/autojump.sh ]] && source /usr/local/etc/profile.d/autojump.sh
fi

# gitignore.io
## Todo: make it accept arguments delimited by spaces
gi() { curl -L -s https://www.gitignore.io/api/$@ ;}

# CMake hunter
if [[ -d "$HOME/.hunter" ]]; then
    export HUNTER_ROOT="$HOME/.hunter"
fi

# Add HomeBrew sbin to PATH
if [[ $platform = "macos" ]]; then
    export PATH="/usr/local/sbin:$PATH"
fi

# Python poetry dependency manager
if [[ -d "$HOME/.poetry/bin" ]]; then
    export PATH="$HOME/.poetry/bin:$PATH"
fi

# Python pdm
if [[ $platform = "macos" ]]; then
    if [[ -d "$HOME/Library/Python/3.9/bin" ]]; then
        export PATH="$HOME/Library/Python/3.9/bin:$PATH"
    fi
    if [ -n "$PYTHONPATH" ]; then
        export PYTHONPATH="$HOME/Library/Application Support/pdm/venv/lib/python3.9/site-packages/pdm/pep582":$PYTHONPATH
    else
        export PYTHONPATH="$HOME/Library/Application Support/pdm/venv/lib/python3.9/site-packages/pdm/pep582"
    fi
fi

# OpenResty
if [[ -d /opt/openresty ]]; then
    export PATH="/opt/openresty/bin:/opt/openresty/nginx/sbin:$PATH"
fi

# ArgyllCMS
if [[ $platform = "macos" ]]; then
    argyll_dir="$HOME/.local/share/Argyll"
    if [[ -d "$argyll_dir" ]]; then
        export PATH="$PATH:$argyll_dir/current/bin"
    fi
fi

# jenv (Manages Java Environment)
if command_exists jenv; then
    export PATH="$HOME/.jenv/bin:$PATH"
    eval "$(jenv init -)"
fi

# GPG
export GPG_TTY
GPG_TTY=$(tty)

# Qt
if [[ -d "$HOME/.local/share/Qt" ]]; then
    export QT_ROOT="$HOME/.local/share/Qt"
fi

# Doom-emacs
if [[ -d "$HOME/.doom.d" ]]; then
    export PATH="$HOME/.emacs.d/bin:$PATH"
fi

# pnpm
if command_exists pnpm; then
    export PNPM_HOME="$HOME/.local/share/pnpm"
    export PATH="$PNPM_HOME:$PATH"
fi

# luaenv
if [[ -d "$HOME/.luaenv" ]]; then
    export PATH="$HOME/.luaenv/bin:$PATH"
    eval "$(luaenv init -)"
fi

# luarocks
LUAROCKS_DIR="$HOME/.local/share/luarocks"
if [[ -d "$LUAROCKS_DIR" ]]; then
    if [[ -d "$LUAROCKS_DIR/current-lua5.1" ]]; then
        alias luarocks51="$LUAROCKS_DIR/current-lua5.1/bin/luarocks"
    fi
    if [[ -d "$LUAROCKS_DIR/current-lua5.3" ]]; then
        alias luarocks53="$LUAROCKS_DIR/current-lua5.3/bin/luarocks"
    fi
    if [[ -d "$LUAROCKS_DIR/current-lua5.4" ]]; then
        alias luarocks54="$LUAROCKS_DIR/current-lua5.4/bin/luarocks"
    fi
fi

# coursier (Scala)
if command_exists coursier; then
    if [[ -d "$HOME/.local/share/coursier/bin" ]]; then
        export PATH="$HOME/.local/share/coursier/bin:$PATH"
    elif [[ -d "$HOME/Library/Application Support/Coursier/bin" ]]; then
        export PATH="$HOME/Library/Application Support/Coursier/bin:$PATH"
    fi
fi

# sdkman
if [[ -d "$HOME/.sdkman/bin" ]]; then
    export SDKMAN_DIR="$HOME/.sdkman"
    [[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
fi

# acme (tls certificate issue&renew)
if [[ -d "$HOME/.acme.sh" ]]; then
    source "$HOME/.acme.sh/acme.sh.env"
fi

# tcl/tkinter
if [[ -d /usr/share/tcltk/tcl8.6 ]]; then
   export TCL_LIBRARY=/usr/share/tcltk/tcl8.6
fi
if [[ -d /usr/share/tcltk/tk8.6 ]]; then
   export TK_LIBRARY=/usr/share/tcltk/tk8.6
fi

# vim: ft=sh
