# Shared config among shells (loaded after other config but before local config at the end)
# Tips
#   - For tools not installed by package manager, we should test if its
#     installation directory exists instead of if its executable exists,
#     e.g. see tmuxifier part

# Load secrets
if [[ -f ~/.shell/secrets ]]; then
    source ~/.shell/secrets
fi

if command_exists nvim; then
    export EDITOR=nvim
elif command_exists vim; then
    export EDITOR=vim
else
    export EDITOR=vi
fi

# Add local bin dir to path
export PATH=$PATH:$HOME/.local/bin

# make `less` more friendly for non-text input files, see lesspipe(1)
if command_exists lesspipe.sh; then
    if [[ $platform = "macos" ]]; then
        export LESSOPEN="|/usr/local/bin/lesspipe.sh %s" LESS_ADVANCED_PREPROCESSOR=1
    elif [[ $platform = "linux" ]]; then
        eval "$(SHELL=/bin/sh lesspipe)"
    fi
fi

# Enable color support of ls and also add handy aliases
if [[ $platform = "linux" ]]; then
    if [ -x /usr/bin/dircolors ]; then
        test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
        alias ls='ls --color=auto'
        alias dir='dir --color=auto'
        alias vdir='vdir --color=auto'

        alias grep='grep --color=auto'    alias fgrep='fgrep --color=auto'
        alias egrep='egrep --color=auto'
    fi
elif [[ $platform = "macos" ]]; then
    export CLICOLOR=1
    # hard-coded, search for LSCOLORS online for more
    export LSCOLORS="Gxfxcxdxbxegedabagacad"
fi

# tmuxifier
if [[ -d "$HOME/.tmux/tmuxifier" ]]; then
    export TMUXIFIER="$HOME/.tmux/tmuxifier"
    export PATH="$HOME/.tmux/tmuxifier/bin:$PATH"
    export TMUXIFIER_LAYOUT_PATH="$HOME/.tmux/tmuxifier_layouts"
    eval "$(tmuxifier init -)"
fi

# pyenv
if command_exists pyenv; then
    if [[ -z "$PYENV_ROOT" ]]; then
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
    fi
    eval "$(pyenv init --path)"
    eval "$(pyenv init -)"
    if [[ -d $(pyenv root)/plugins/pyenv-virtualenv ]]; then
        eval "$(pyenv virtualenv-init -)"
        alias workon='pyenv activate'
        alias mkvirtualenv='pyenv virtualenv'
        alias lsvirtualenv='pyenv virtualenvs'
        alias rmvirtualenv='pyenv uninstall'
    fi
fi

# bd. See https://github.com/vigneshwaranr/bd
# Quickly go back to a parent directory in linux instead of typing "cd ../../.." repeatedly
if command_exists bd; then
    alias bd=". bd -si"
fi

# thefuck
if command_exists thefuck; then
    eval "$(thefuck --alias)"
fi

# autojump
if [[ $platform = "linux" ]]; then
    [[ -f /usr/share/autojump/autojump.sh ]] && source /usr/share/autojump/autojump.sh
elif [[ $platform = "macos" ]]; then
    [[ -f /usr/local/etc/profile.d/autojump.sh ]] && source /usr/local/etc/profile.d/autojump.sh
fi

# gitignore.io
## Todo: make it accept arguments delimited by spaces
gi() { curl -L -s https://www.gitignore.io/api/$@ ;}

# CMake hunter
export HUNTER_ROOT=~/.local/share/cmake-hunter
[[ -d $HUNTER_ROOT ]] || mkdir "$HUNTER_ROOT"

# Add HomeBrew sbin to PATH
if [[ $platform = "macos" ]]; then
    export PATH="/usr/local/sbin:$PATH"
fi

# Python poetry dependency manager
if [[ -d "$HOME/.poetry/bin" ]]; then
    export PATH="$HOME/.poetry/bin:$PATH"
fi

# OpenResty
if [[ -d /opt/openresty ]]; then
    export PATH="/opt/openresty/bin:/opt/openresty/nginx/sbin:$PATH"
fi

# ArgyllCMS
if [[ $platform = "macos" ]]; then
    argyll_dir="$HOME/.local/share/Argyll"
    if [[ -d "$argyll_dir" ]]; then
        export PATH="$PATH:$argyll_dir/current/bin"
    fi
fi

# jenv (Manages Java Environment)
if command_exists jenv; then
    export PATH="$HOME/.jenv/bin:$PATH"
    eval "$(jenv init -)"
fi

# GPG
export GPG_TTY=$(tty)

# Qt
if [[ -d "$HOME/.local/share/Qt" ]]; then
    export QT_ROOT="$HOME/.local/share/Qt"
fi

# Doom-emacs
if [[ -d "$HOME/.doom.d" ]]; then
    export PATH="$HOME/.emacs.d/bin:$PATH"
fi

# vim: ft=sh
